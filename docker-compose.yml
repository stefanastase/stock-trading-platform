version: "3.9"
services:
  auth:
    hostname: auth
    image: gitlab.cs.pub.ro:5050/idp_2023_stock_trading_platform/stock_trading_auth:latest
    secrets:
      - auth_db_password_secret
      - auth_secret
    environment:
      HOST_NAME: postgres
      AUTH_DB_NAME: auth
      PORTFOLIOS_DB_NAME: portfolios
      DB_USER: auth_user
      DB_PASSWORD_FILE: /run/secrets/auth_db_password_secret
      AUTH_SECRET_FILE: /run/secrets/auth_secret
      EXPIRE_TIME_SEC: 1800 # 30 min
    networks:
      - db
      - internal
      - logging
    deploy:
      mode: replicated
      replicas: 2

  trading-platform:
    hostname: trading-platform
    image: gitlab.cs.pub.ro:5050/idp_2023_stock_trading_platform/stock_trading_platform
    secrets:
      - order_secret
    environment:
      ORDER_SECRET_FILE: /run/secrets/order_secret
    networks:
      - platform
      - internal
      - logging
    deploy:
      mode: global

  portfolio-mgmt:
    hostname: portfolio-mgmt
    image: gitlab.cs.pub.ro:5050/idp_2023_stock_trading_platform/stock_trading_portfolio_management
    secrets:
      - portfolio_db_password_secret
    environment:
      HOST_NAME: postgres
      DB_NAME: portfolios 
      DB_USER: portfolios_user
      DB_PASSWORD_FILE: /run/secrets/portfolio_db_password_secret
    networks:
      - db
      - platform
    deploy:
      mode: replicated
      replicas: 2

  order-mgmt:
    hostname: order-mgmt
    image: gitlab.cs.pub.ro:5050/idp_2023_stock_trading_platform/stock_trading_order_management
    secrets:
      - order_db_password_secret
      - order_secret
    environment:
      HOST_NAME: postgres
      DB_NAME: orders
      DB_USER: orders_user
      DB_PASSWORD_FILE: /run/secrets/order_db_password_secret
      ORDER_SECRET_FILE: /run/secrets/order_secret
    networks:
      - db
      - platform
    deploy:
      mode: global

  postgres:
    image: postgres
    secrets:
      - pg_user_secret
      - pg_password_secret
    environment:
      POSTGRES_USER_FILE: /run/secrets/pg_user_secret
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_password_secret
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    networks:
      - db
      - db_admin
  
  adminer:
    image: adminer:latest
    ports:
      - 8080:8080
    networks:
      - db_admin
      - internal
    deploy:
      mode: replicated
      replicas: 1

  kong:
    image: kong:latest
    volumes:
      - ./kong:/usr/local/kong/declarative
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 80:8000
      - 443:8443
      - 8001:8001
      - 8444:8444
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    networks:
      - internal
      - monitoring
  
  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    networks:
      - logging
      - monitoring
      - visualizing
  
  loki:
    image: grafana/loki
    volumes:
        - ./loki/loki.yml:/etc/config/loki.yml
        - loki_data:/tmp/loki
    entrypoint:
        - /usr/bin/loki
        - -config.file=/etc/config/loki.yml
    ports:
        - 3100:3100
    user: 0:0
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
        - logging
        - visualizing

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - logging
      - monitoring

  agent:
    image: portainer/agent:2.11.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.11.1
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9443:9443"
      - "9000:9000"
      - "8000:8000"
    volumes:
      - portainer_data:/data
    networks:
      - agent_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    
volumes:
  postgres-data:
  portainer_data:
  grafana_data:
  loki_data:

networks:
  agent_network:
      driver: overlay
      attachable: true
  db:
  db_admin:
  platform:
  internal:
  logging:
  monitoring:
  visualizing:

secrets:
  pg_user_secret:
    file: './secrets/pg_user.txt'
  pg_password_secret:
    file: './secrets/pg_password.txt'
  auth_secret:
    file: './secrets/auth.txt'
  auth_db_password_secret:
    file: './secrets/auth_db_password.txt'
  order_secret:
    file: './secrets/order.txt'
  order_db_password_secret:
    file: './secrets/order_db_password.txt'
  portfolio_db_password_secret:
    file: './secrets/portfolio_db_password.txt'